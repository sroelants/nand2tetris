// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(
        in=load,
        sel=address[0..1],
        a=load-dmux0,
        b=load-dmux1,
        c=load-dmux2,
        d=load-dmux3
    );

    RAM4K(in=in, load=load-dmux0, address=address[2..13], out=ram-out0);
    RAM4K(in=in, load=load-dmux1, address=address[2..13], out=ram-out1);
    RAM4K(in=in, load=load-dmux2, address=address[2..13], out=ram-out2);
    RAM4K(in=in, load=load-dmux3, address=address[2..13], out=ram-out3);

    Mux4Way16(
        a=ram-out0,
        b=ram-out1,
        c=ram-out2,
        d=ram-out3,
        sel=address[0..1],
        out=out
    );
}
