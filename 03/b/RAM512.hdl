// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(
        in=load,
        sel=address[0..2],
        a=load-dmux0,
        b=load-dmux1,
        c=load-dmux2,
        d=load-dmux3,
        e=load-dmux4,
        f=load-dmux5,
        g=load-dmux6,
        h=load-dmux7
    );

    RAM64(in=in, load=load-dmux0, address=address[3..8], out=ram-out0);
    RAM64(in=in, load=load-dmux1, address=address[3..8], out=ram-out1);
    RAM64(in=in, load=load-dmux2, address=address[3..8], out=ram-out2);
    RAM64(in=in, load=load-dmux3, address=address[3..8], out=ram-out3);
    RAM64(in=in, load=load-dmux4, address=address[3..8], out=ram-out4);
    RAM64(in=in, load=load-dmux5, address=address[3..8], out=ram-out5);
    RAM64(in=in, load=load-dmux6, address=address[3..8], out=ram-out6);
    RAM64(in=in, load=load-dmux7, address=address[3..8], out=ram-out7);

    Mux8Way16(
        a=ram-out0,
        b=ram-out1,
        c=ram-out2,
        d=ram-out3,
        e=ram-out4,
        f=ram-out5,
        g=ram-out6,
        h=ram-out7,
        sel=address[0..2],
        out=out
    );
}
